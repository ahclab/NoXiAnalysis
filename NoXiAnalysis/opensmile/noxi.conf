ommon component list ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[componentInstances:cComponentManager]
instance[dataMemory].type = cDataMemory
instance[waveSource].type = cWaveSource
instance[csvSink].type = cCsvSink
instance[dataSelect].type = cDataSelector

;;;;;;; Prosody component list ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
instance[frame_pros].type=cFramer
instance[int].type=cIntensity
instance[win_pros].type=cWindower
instance[fft_pros].type=cTransformFFT
instance[fftmag_pros].type=cFFTmagphase
instance[acf].type=cAcf
instance[cep].type=cAcf
instance[pitch].type=cPitchACF
instance[smo].type=cContourSmoother

;;;;;;; MFCC component list ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
instance[frame_mfcc].type=cFramer
instance[pe].type=cVectorPreemphasis
instance[win_mfcc].type=cWindower
instance[fft_mfcc].type=cTransformFFT
instance[fftmag_mfcc].type=cFFTmagphase
 ; compute magnitude of the complex fft from the previous component
instance[melspec].type=cMelspec
 ; compute Mel-bands from magnitude spectrum
instance[mfcc].type=cMfcc
 ; compute MFCC from Mel-band spectrum
instance[cms].type=cFullinputMean
 ; "cepstral" mean subtraction of mfcc, delta, and accel coefficients
instance[delta1].type=cDeltaRegression
 ; delta and accel of MFCC
instance[delta2].type=cDeltaRegression


 // Here you can control the amount of detail displayed for the data memory
 // level configuration. 0 is no information at all, 5 is maximum detail.
printLevelStats=0
 // You can set the number of parallel threads (experimental):
nThreads = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;; Common main section ;;;;;;;;;;;;;;;;;;;;;;;;;;;

[waveSource:cWaveSource]
writer.dmLevel = wave
period = 0
; filename = input.wav
filename = \cm[inputfile(I){input.wav}:file name of the input wave file]
monoMixdown = 1 

;;;;;;;;;;;;;;;;;;;;;;;;;;;; Prosody main section ;;;;;;;;;;;;;;;;;;;;;;;;;;;

[frame_pros:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames_pros
frameSize = 0.01
frameStep = 0.01
frameMode = fixed
frameCenterSpecial = left


[int:cIntensity]
reader.dmLevel = frames_pros
writer.dmLevel = intens
// nameAppend =
;copyInputName = 1
processArrayFields = 1
intensity = 0
loudness = 1

[win_pros:cWindower]
reader.dmLevel=frames_pros
writer.dmLevel=win_pros
winFunc=gauss
gain=1.0
sigma=0.4

[fft_pros:cTransformFFT]
reader.dmLevel=win_pros
writer.dmLevel=fft_pros
 ; for compatibility with 2.2.0 and older versions
zeroPadSymmetric = 0

[fftmag_pros:cFFTmagphase]
reader.dmLevel=fft_pros
writer.dmLevel=fftmag_pros

[acf:cAcf]
reader.dmLevel=fftmag_pros
writer.dmLevel=acf

[cep:cAcf]
reader.dmLevel=fftmag_pros
writer.dmLevel=cepstrum
cepstrum=1

[pitch:cPitchACF]
reader.dmLevel = acf;cepstrum
writer.dmLevel = pitch
// nameAppend =
;copyInputName = 1
processArrayFields = 0
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 0
F0 = 1
F0raw = 0
F0env = 1
voicingCutoff = 0.550000

[smo:cContourSmoother]
reader.dmLevel = pitch;intens
writer.dmLevel = lld
nameAppend = sma
copyInputName = 1
noPostEOIprocessing = 0
smaWin = 3

;;;;;;;;;;;;;;;;;;;;;;;;;;;; MFCC main section ;;;;;;;;;;;;;;;;;;;;;;;;;;;

[frame_mfcc:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames_mfcc
; noPostEOIprocessing = 1
; copyInputName = 1
frameSize = 0.025
frameStep = 0.010
frameMode = fixed
frameCenterSpecial = left

[pe:cVectorPreemphasis]
reader.dmLevel=frames_mfcc
writer.dmLevel=framespe
k=0.97
de = 0

[win_mfcc:cWindower]
reader.dmLevel=framespe
writer.dmLevel=win_mfcc
; copyInputName = 1
processArrayFields = 1
 ; hamming window
winFunc = ham
 ; no gain
gain = 1.0
offset = 0

[fft_mfcc:cTransformFFT]
reader.dmLevel=win_mfcc
writer.dmLevel=fft_mfcc
; copyInputName = 1
processArrayFields = 1
inverse = 0

[fftmag_mfcc:cFFTmagphase]
reader.dmLevel=fft_mfcc
writer.dmLevel=fftmag_mfcc
; copyInputName = 1
processArrayFields = 1
inverse = 0
magnitude = 1
phase = 0

[melspec:cMelspec]
reader.dmLevel=fftmag_mfcc
writer.dmLevel=melspec
; copyInputName = 1
processArrayFields = 1
; htk compatible sample value scaling
htkcompatible = 0
nBands = 26
; use power spectrum instead of magnitude spectrum
usePower = 1
lofreq = 0
hifreq = 8000
specScale = mel
inverse = 0

[mfcc:cMfcc]
reader.dmLevel=melspec
writer.dmLevel=mfcc
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
; copyInputName = 1
processArrayFields = 1
firstMfcc = 0
lastMfcc  = 12
cepLifter = 22.0
htkcompatible = 0

[delta1:cDeltaRegression]
reader.dmLevel=mfcc
writer.dmLevel=mfccD
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
nameAppend = de
; copyInputName = 1
noPostEOIprocessing = 0
deltawin=2
blocksize=1

[delta2:cDeltaRegression]
reader.dmLevel=mfccD
writer.dmLevel=mfccA
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
nameAppend = de
; copyInputName = 1
noPostEOIprocessing = 0
deltawin=2
blocksize=1

[cms:cFullinputMean]
reader.dmLevel=mfcc
writer.dmLevel=mfccM

;;;;;;;;;;;;;;;;;;;;;;;;;;;; Common main section ;;;;;;;;;;;;;;;;;;;;;;;;;;;

[dataSelect:cDataSelector]
 ; Rename labels
reader.dmLevel = pitch;intens;mfcc
writer.dmLevel = out
selected = voiceProb;F0env;pcm_loudness;pcm_fftMag_mfcc[0];pcm_fftMag_mfcc[1];pcm_fftMag_mfcc[2];pcm_fftMag_mfcc[3];pcm_fftMag_mfcc[4];pcm_fftMag_mfcc[5];pcm_fftMag_mfcc[6];pcm_fftMag_mfcc[7];pcm_fftMag_mfcc[8];pcm_fftMag_mfcc[9];pcm_fftMag_mfcc[10];pcm_fftMag_mfcc[11];pcm_fftMag_mfcc[12]
newNames = voiceProb;F0env;loudness;mfcc[0];mfcc[1];mfcc[2];mfcc[3];mfcc[4];mfcc[5];mfcc[6];mfcc[7];mfcc[8];mfcc[9];mfcc[10];mfcc[11];mfcc[12]

[csvSink:cCsvSink]
reader.dmLevel = out
; filename = output.csv
filename = \cm[framerutfile(O){output.csv}:file name of the framerut CSV file]
delimChar = ,
append = 0
timestamp = 1
number = 1
printHeader = 1


